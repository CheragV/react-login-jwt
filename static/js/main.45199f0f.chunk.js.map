{"version":3,"sources":["components/Create.js","components/Login.js","utils/validations.js","utils/ApiService.js","App.js","serviceWorker.js","index.js"],"names":["Create","id","className","htmlFor","name","type","placeholder","Login","for","setError","field","isValid","parentElement","querySelector","style","visibility","fromValidation","form","userName","querySelectorAll","isNameValid","isEmailValid","isPasswordValid","isConfirmPasswordValid","forEach","item","value","email","test","password","length","validatePassword","filter","call","instance","require","create","baseURL","timeout","headers","loginUser","userData","a","post","response","defaults","common","data","token","user","console","error","createUser","put","e","setUser","preventDefault","target","User","_id","log","interceptors","use","message","alert","Promise","reject","App","useState","tab","setTab","onClick","onClickHandler","Object","keys","map","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.45199f0f.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Create() {\n    return (\n        <form id=\"create\">\n\n          <div className=\"input-container\">\n            <label htmlFor=\"username\" className=\"label\">User Name</label>\n            <div className=\"icon-text\">\n              <i className = \"fas fa-user\"></i>\n              <input name=\"username\" id=\"username\" type=\"text\" className=\"input\" placeholder=\"USERNAME\" ></input>\n              <p className=\"error-text\">Username is in-valid</p>\n            </div>\n          </div>\n\n          <div className=\"input-container\">\n            <label htmlFor=\"email\" className=\"label\">Email id</label>\n            <div className=\"icon-text\">\n              <i className = \"far fa-envelope\"></i>\n            <input name=\"email\" id=\"email\" type=\"text\" className=\"input\" placeholder=\"EMAIL\" ></input>\n            <p className=\"error-text\">Email is invalid</p>\n            </div>\n          </div>\n\n          <div className=\"input-container\">\n            <label htmlFor=\"password\" className=\"label\">Password</label>\n            <div className=\"icon-text\">\n              <i className = \"fas fa-lock\"></i>\n            <input name=\"password\" id=\"password\" type=\"password\" className=\"input\" placeholder=\"PASSWORD\" ></input>\n            <p className=\"error-text\">Password should be of size 6 to 12 alphabets</p>\n            </div>\n          </div>\n\n          <div className=\"input-container\">\n            <label htmlFor=\"cpassword\" className=\"label\">Confirm Password</label>\n            <div className=\"icon-text\">\n              <i className = \"fas fa-lock\"></i>\n            <input name=\"cpassword\" id=\"cpassword\" type=\"password\" className=\"input\" placeholder=\"CONFIRM PASSWORD\" ></input>\n            <p className=\"error-text\">Passwords do not Match</p>\n            </div>\n          </div>\n\n        </form>\n    )\n}\n","import React from 'react'\n\nexport default function Login() {\n    return (\n        <form id=\"login\" >\n\n          <div className=\"input-container\">\n            <label for=\"email\" className=\"label\">Email id</label>\n            <div className=\"icon-text\">\n              <i className=\"far fa-envelope\"></i>\n              <input name=\"email\" id=\"email\" type=\"text\" className=\"input\" placeholder=\"EMAIL\" ></input>\n              <p className=\"error-text\">Email is invalid</p>\n            </div>\n          </div>\n\n          <div className=\"input-container\">\n            <label for=\"password\" className=\"label\">Password</label>\n            <div className=\"icon-text\">\n              <i className=\"fas fa-lock\"></i>\n              <input name=\"password\" id=\"password\" type=\"password\" className=\"input\" placeholder=\"PASSWORD\" ></input>\n              <p className=\"error-text\">Password should be of size 6 to 12 alphabets</p>\n            </div>\n          </div>\n\n        </form>\n    )\n}\n","const validateUserName = name => !(name == null || name === \"\");\n\nconst validateEmailID = email => {\n    let mailformat = /^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/;\n    return mailformat.test(email);\n}\n\nconst validatePassword = password => (password.length >= 6 && password.length < 12)\n\n\nconst setError = (field, isValid) => {\n    if (isValid) {\n        field.parentElement.querySelector('.error-text').style.visibility = \"hidden\"\n    } else { \n        field.parentElement.querySelector('.error-text').style.visibility = \"visible\"\n    }\n}\n\n\nconst fromValidation = form => {\n    let userName = form.querySelectorAll('input');\n    let isNameValid = true, isEmailValid = true, isPasswordValid = true, isConfirmPasswordValid = true;\n    userName.forEach(item => {\n      switch (item.id) {\n          case 'username':\n              isNameValid = validateUserName(item.value);\n              setError(item, isNameValid);\n              break;\n          \n          case 'email':\n              isEmailValid = validateEmailID(item.value);\n              setError(item, isEmailValid);\n              break;\n          \n          case 'password':\n              isPasswordValid = validatePassword(item.value);\n              setError(item, isPasswordValid);\n              break;\n\n          case 'cpassword':\n              let password = [].filter.call(userName, (item) => item.id === 'password')[0];\n              isConfirmPasswordValid = password.value === item.value;\n              setError(item, isConfirmPasswordValid);\n              break;\n  \n        default: \n          //do nothing\n      }  \n    });\n    return isNameValid && isEmailValid && isPasswordValid && isConfirmPasswordValid;\n}\n\n\nexport {\n    fromValidation\n};","const axios = require('axios');\n\n\nconst instance = axios.create({\n  baseURL: 'https://login-server-app.herokuapp.com/',\n  timeout: 3000,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json;charset=utf-8'\n  }\n});\n\ninstance.interceptors.response.use(function (response) {\n  return response;\n}, (error) => {\n    if (error.response.data.message) { \n      alert(error.response.data.message)\n    }\n  return Promise.reject(error);\n});\n\n\nasync function loginUser(userData) {\n\n  try {\n    let response = await instance.post('api/user/login', { ...userData })\n    instance.defaults.headers.common['Authorization'] = response.data.token;\n    return response.data.user\n  } catch (error) {\n        console.error(error);\n    }\n}\n\nasync function createUser(userData) {\n  try {\n    let response = await instance.put('api/user/register', { ...userData })\n    instance.defaults.headers.common['Authorization'] = response.data.token;\n    return response.data.user\n  } catch (error) {\n        console.error(error);\n    }\n}\n\n\nexport {\n  loginUser,\n  createUser\n }\n\n\n","import React, { useState } from 'react';\nimport { Create, Login} from './components';\nimport './resources/styles/App.scss';\nimport { fromValidation } from './utils/validations';\nimport { loginUser, createUser } from './utils/ApiService';\n\n\nasync function onClickHandler(e, setUser) { \n  e.preventDefault();\n  let form = e.target.form;\n  if (fromValidation(form)) {\n    switch (e.target.form.id) {\n      case 'create':\n        let userData = {\n          name: form.querySelector('#username').value,\n          email: form.querySelector('#email').value,\n          password: form.querySelector('#password').value\n        }\n        let User = await createUser(userData);\n        if (User && User._id) {\n          setUser(User);\n        }\n        break;\n      \n      case 'login': {\n        let userData = {\n          email: form.querySelector('#email').value,\n          password: form.querySelector('#password').value\n        }\n        let User = await loginUser(userData);\n        if (User && User._id) {\n          setUser(User);\n        }\n      }\n        break;\n    \n      default:\n        console.log('None')\n    }\n  }\n}\n\n\nfunction App() {\n  const [tab, setTab] = useState('create');\n  const [user, setUser] = useState({});\n\n\n  return (\n    <div className=\"app\">\n\n      <div className=\"login-container\">\n\n        <div className=\"login-options\">\n          <div onClick={() => setTab('create')} className={`tab ${tab === 'create' ? 'set-background-primary' : ''}`}>\n            <h4>\n              Create Account\n            </h4>\n          </div>\n\n          <div onClick={() => setTab('login')} className={`tab ${tab === 'login' ? 'set-background-primary' : ''}`}>\n            <h4>\n              Login\n            </h4>\n          </div>\n        </div>\n          \n        {tab === 'create' ? <Create /> : <Login />}\n        \n        <button type=\"submit\" form={tab} value=\"Submit\" onClick={(e) => onClickHandler(e, setUser)}>\n          Submit\n        </button>\n        \n      </div>\n\n      {\n        user._id ? (\n          <div>\n            {\n              Object.keys(user).map(item => (\n                <p>{`${item}: \\t ${user[item]}`}</p>\n              ))\n            }\n          </div>\n        ) : null\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\n"],"sourceRoot":""}